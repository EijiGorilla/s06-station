{"version":3,"file":"static/js/46752.fec5c37b.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-tab/customElement.js","../node_modules/lit-html/src/directives/repeat.ts","../node_modules/@esri/calcite-components/dist/components/calcite-color-picker-hex-input/customElement.js","../node_modules/@esri/calcite-components/dist/components/calcite-color-picker/customElement.js","../node_modules/@esri/calcite-components/dist/components/calcite-tabs/customElement.js","../node_modules/lodash-es/throttle.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { html } from \"lit-html\";\nimport { LitElement, setAttribute, safeClassMap } from \"@arcgis/lumina\";\nimport { n as nodeListToArray } from \"../../chunks/dom.js\";\nimport { g as guid } from \"../../chunks/guid.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  container: \"container\",\n  content: \"content\"\n};\nconst styles = css`:host{display:none}:host,.container,.content{block-size:100%;inline-size:100%}:host([selected]),:host([selected]) .container{display:flex;flex-direction:column}.content{box-sizing:border-box;padding-block:var(--calcite-tab-content-space-y, var(--calcite-tab-content-block-padding, var(--calcite-internal-tab-content-space-y)))}.scale-s{--calcite-internal-tab-content-space-y: .25rem;font-size:var(--calcite-font-size-sm);line-height:1rem}.scale-m{--calcite-internal-tab-content-space-y: .5rem;font-size:var(--calcite-font-size);line-height:1rem}.scale-l{--calcite-internal-tab-content-space-y: .625rem;font-size:var(--calcite-font-size-md);line-height:1.25rem}.container{display:none;block-size:100%;inline-size:100%;overflow:auto;outline-color:transparent}.container:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Tab extends LitElement {\n  constructor() {\n    super();\n    this.guid = `calcite-tab-title-${guid()}`;\n    this.scale = \"m\";\n    this.selected = false;\n    this.listenOn(document.body, \"calciteInternalTabChange\", this.internalTabChangeHandler);\n  }\n  static {\n    this.properties = { labeledBy: [16, {}, { state: true }], scale: 1, selected: [7, {}, { reflect: true, type: Boolean }], tab: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async getTabIndex() {\n    return Array.prototype.indexOf.call(nodeListToArray(this.el.parentElement.children).filter((el) => el.matches(\"calcite-tab\")), this.el);\n  }\n  _updateAriaInfo(tabIds = [], titleIds = []) {\n    this.labeledBy = titleIds[tabIds.indexOf(this.el.id)] || null;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.body?.dispatchEvent(new CustomEvent(\"calciteTabUnregister\", {\n      detail: this.el\n    }));\n  }\n  internalTabChangeHandler(event) {\n    const targetTabsEl = event.composedPath().find((el) => el.tagName === \"CALCITE-TABS\");\n    if (targetTabsEl !== this.parentTabsEl) {\n      return;\n    }\n    if (this.tab) {\n      this.selected = this.tab === event.detail.tab;\n    } else {\n      this.getTabIndex().then((index) => {\n        this.selected = index === event.detail.tab;\n      });\n    }\n    event.stopPropagation();\n  }\n  render() {\n    const id = this.el.id || this.guid;\n    setAttribute(this.el, \"aria-labelledby\", this.labeledBy);\n    setAttribute(this.el, \"id\", id);\n    return html`<div class=${safeClassMap({ [CSS.container]: true, [`scale-${this.scale}`]: true })} role=tabpanel .tabIndex=${this.selected ? 0 : -1}><section class=${safeClassMap(CSS.content)}><slot></slot></section></div>`;\n  }\n}\ncustomElement(\"calcite-tab\", Tab);\nexport {\n  Tab\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport Color from \"color\";\nimport { html } from \"lit\";\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\nimport { n as normalizeHex, h as hexify, i as isValidHex, a as isLonghandHex, b as isShorthandHex, r as rgbToHex, o as opacityToAlpha, c as alphaToOpacity, O as OPACITY_LIMITS, d as hexChar } from \"../../chunks/utils4.js\";\nimport { b as focusElement } from \"../../chunks/dom.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\"\n};\nconst styles = css`:host{display:block}.container{display:flex;inline-size:100%;flex-wrap:nowrap;align-items:center}.hex-input{flex-grow:1;text-transform:uppercase}.opacity-input{inline-size:100px;margin-inline-start:-1px}:host([hidden]){display:none}[hidden]{display:none}`;\nconst DEFAULT_COLOR = Color();\nclass ColorPickerHexInput extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.internalColor = DEFAULT_COLOR;\n    this.alphaChannel = false;\n    this.allowEmpty = false;\n    this.hexLabel = \"Hex\";\n    this.scale = \"m\";\n    this.value = normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel), this.alphaChannel, true);\n    this.calciteColorPickerHexInputChange = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { internalColor: [16, {}, { state: true }], alphaChannel: [5, {}, { type: Boolean }], allowEmpty: [5, {}, { type: Boolean }], hexLabel: 1, messages: [0, {}, { attribute: false }], numberingSystem: 1, scale: [3, {}, { reflect: true }], value: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    return focusElement(this.hexInputNode);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.previousNonNullValue = this.value;\n    const { allowEmpty, alphaChannel, value } = this;\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n      return;\n    }\n    if (allowEmpty) {\n      this.internalSetValue(void 0, void 0, false);\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"value\") && (this.hasUpdated || this.value !== normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel), this.alphaChannel, true))) {\n      this.internalSetValue(this.value, changes.get(\"value\"), false);\n    }\n  }\n  onHexInputBlur() {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n    const anyShorthand = isShorthandHex(hex, true) || isShorthandHex(hex, false);\n    if (anyShorthand) {\n      this.onHexInputChange();\n    }\n    if (willClearValue || isValidHex(hex) && isLonghand) {\n      return;\n    }\n    node.value = allowEmpty && !internalColor ? \"\" : this.formatHexForInternalInput(rgbToHex(\n      // always display hex input in RRGGBB format\n      internalColor.object()\n    ));\n  }\n  onOpacityInputBlur() {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    if (willClearValue) {\n      return;\n    }\n    node.value = allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  }\n  onOpacityInputInput() {\n    this.onOpacityInputChange();\n  }\n  onHexInputChange() {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n    this.internalSetValue(value, this.value);\n  }\n  onOpacityInputChange() {\n    const node = this.opacityInputNode;\n    let value;\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n    this.internalSetValue(value, this.value);\n  }\n  onInputFocus(event) {\n    if (event.type === \"calciteInternalInputTextFocus\") {\n      this.hexInputNode.selectText();\n    } else {\n      this.opacityInputNode.selectText();\n    }\n  }\n  onHexInputInput() {\n    const hexInputValue = `#${this.hexInputNode.value}`;\n    const oldValue = this.value;\n    if (isValidHex(hexInputValue, this.alphaChannel) && isLonghandHex(hexInputValue, this.alphaChannel)) {\n      this.internalSetValue(hexInputValue, oldValue);\n    }\n  }\n  onInputKeyDown(event) {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n    if (key === \"Tab\" && isShorthandHex(value, this.alphaChannel) || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n      return;\n    }\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n      this.internalSetValue(hexify(this.nudgeRGBChannels(internalColor, bump * direction, composedPath.includes(hexInputNode) ? \"rgb\" : \"a\"), alphaChannel), oldValue);\n      event.preventDefault();\n      return;\n    }\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  }\n  onHexInputPaste(event) {\n    const hex = event.clipboardData.getData(\"text\");\n    if (isValidHex(hex, this.alphaChannel) && isLonghandHex(hex, this.alphaChannel)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n      this.internalSetValue(hex, this.value);\n    }\n  }\n  internalSetValue(value, oldValue, emit = true) {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n        const changed = !currentColor || normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = void 0;\n      this.value = void 0;\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n      return;\n    }\n    this.value = oldValue;\n  }\n  storeHexInputRef(node) {\n    this.hexInputNode = node;\n  }\n  storeOpacityInputRef(node) {\n    this.opacityInputNode = node;\n  }\n  formatHexForInternalInput(hex) {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n  formatOpacityForInternalInput(color) {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n  nudgeRGBChannels(color, amount, context) {\n    let nudgedChannels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : void 0\n      ];\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha];\n    }\n    return Color(nudgedChannels);\n  }\n  render() {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n    return html`<div class=${safeClassMap(CSS.container)}><calcite-input-text class=${safeClassMap(CSS.hexInput)} .label=${messages?.hex || hexLabel} .maxLength=${this.alphaChannel ? 8 : 6} @keydown=${this.onInputKeyDown} @paste=${this.onHexInputPaste} @calciteInputTextChange=${this.onHexInputChange} @calciteInputTextInput=${this.onHexInputInput} @calciteInternalInputTextBlur=${this.onHexInputBlur} @calciteInternalInputTextFocus=${this.onInputFocus} prefix-text=# .scale=${inputScale} .value=${hexInputValue} ${ref(this.storeHexInputRef)}></calcite-input-text>${alphaChannel ? keyed(\"opacity-input\", html`<calcite-input-number class=${safeClassMap(CSS.opacityInput)} .label=${messages?.opacity} .max=${OPACITY_LIMITS.max} max-length=3 .min=${OPACITY_LIMITS.min} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.onInputKeyDown} @calciteInputNumberInput=${this.onOpacityInputInput} @calciteInternalInputNumberBlur=${this.onOpacityInputBlur} @calciteInternalInputNumberFocus=${this.onInputFocus} .scale=${inputScale} suffix-text=% .value=${opacityInputValue} ${ref(this.storeOpacityInputRef)}></calcite-input-number>`) : null}</div>`;\n  }\n}\ncustomElement(\"calcite-color-picker-hex-input\", ColorPickerHexInput);\nexport {\n  ColorPickerHexInput\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { repeat } from \"lit-html/directives/repeat.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport { html, nothing } from \"lit\";\nimport { LitElement, createEvent, safeClassMap, safeStyleMap } from \"@arcgis/lumina\";\nimport { i as isPrimaryPointerButton, h as focusFirstTabbable, g as getElementDir } from \"../../chunks/dom.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { i as isActivationKey } from \"../../chunks/key.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { c as clamp, r as remap, a as closeToRangeEdge } from \"../../chunks/math.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { D as DEFAULT_COLOR, C as CSSColorMode, g as getSliderWidth, e as getColorFieldDimensions, S as STATIC_DIMENSIONS, n as normalizeHex, h as hexify, p as parseMode, f as DEFAULT_STORAGE_KEY_PREFIX, j as alphaCompatible, k as normalizeColor, l as colorEqual, O as OPACITY_LIMITS, R as RGB_LIMITS, H as HSV_LIMITS, m as CSS, o as opacityToAlpha, t as toAlphaMode, q as toNonAlphaMode, s as HUE_LIMIT_CONSTRAINED, u as normalizeAlpha, c as alphaToOpacity, v as SCOPE_SIZE } from \"../../chunks/utils4.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:inline-block;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-normal);inline-size:var(--calcite-internal-color-picker-min-width);min-inline-size:var(--calcite-internal-color-picker-min-width)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([scale=s]){--calcite-internal-color-picker-min-width: 200px;--calcite-color-picker-spacing: 8px}:host([scale=s]) .saved-colors{gap:.25rem;grid-template-columns:repeat(auto-fill,20px)}:host([scale=m]){--calcite-internal-color-picker-min-width: 240px;--calcite-color-picker-spacing: 12px}:host([scale=l]){--calcite-internal-color-picker-min-width: 304px;--calcite-color-picker-spacing: 16px;font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=l]) .section:first-of-type{padding-block-start:var(--calcite-color-picker-spacing)}:host([scale=l]) .saved-colors{grid-template-columns:repeat(auto-fill,32px)}:host([scale=l]) .control-section{display:flex;flex-direction:column;flex-wrap:wrap;align-items:baseline}:host([scale=l]) .color-hex-options{inline-size:100%;display:flex;flex-shrink:1;flex-direction:column;justify-content:space-around}:host([scale=l]) .color-mode-container{flex-shrink:3}.container{background-color:var(--calcite-color-foreground-1);display:flex;flex-direction:column;block-size:min-content;border:1px solid var(--calcite-color-border-1)}.control-and-scope{position:relative;display:flex;cursor:pointer;touch-action:none}.color-field,.control-and-scope{-webkit-user-select:none;user-select:none}.scope{pointer-events:none;position:absolute;z-index:var(--calcite-z-index);block-size:1px;inline-size:1px;border-radius:9999px;background-color:transparent;font-size:var(--calcite-font-size--1);outline-color:transparent}.scope:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))));outline-offset:6px}.hex-and-channels-group{display:flex;inline-size:100%;flex-direction:column;flex-wrap:wrap}.section{padding-block:0 var(--calcite-color-picker-spacing);padding-inline:var(--calcite-color-picker-spacing)}.section:first-of-type{padding-block-start:var(--calcite-color-picker-spacing)}.sliders{display:flex;flex-direction:column;justify-content:space-between;margin-inline-start:var(--calcite-color-picker-spacing);gap:var(--calcite-spacing-xxs)}.preview-and-sliders{display:flex;align-items:center;padding:var(--calcite-color-picker-spacing)}.color-hex-options,.section--split{flex-grow:1}.header{display:flex;align-items:center;justify-content:space-between;color:var(--calcite-color-text-1)}.color-mode-container{padding-block-start:var(--calcite-color-picker-spacing)}.channels{display:flex}.channel{flex-grow:1}.channel[data-channel-index=\"3\"]{margin-inline-start:-1px;min-inline-size:81px}:host([scale=s]) .channel[data-channel-index=\"3\"]{min-inline-size:68px}:host([scale=l]) .channel[data-channel-index=\"3\"]{min-inline-size:88px}.saved-colors{display:grid;gap:.5rem;padding-block-start:var(--calcite-color-picker-spacing);grid-template-columns:repeat(auto-fill,24px)}.saved-colors-buttons{display:flex}.saved-color{outline-offset:0;outline-color:transparent;cursor:pointer}.saved-color:focus{outline:2px solid var(--calcite-color-brand);outline-offset:2px}.saved-color:hover{transition:outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;outline:2px solid var(--calcite-color-border-2);outline-offset:2px}:host([hidden]){display:none}[hidden]{display:none}`;\nconst throttleFor60FpsInMs = 16;\nclass ColorPicker extends LitElement {\n  constructor() {\n    super();\n    this._color = DEFAULT_COLOR;\n    this.internalColorUpdateContext = null;\n    this.isActiveChannelInputEmpty = false;\n    this.mode = CSSColorMode.HEX;\n    this.resizeObserver = createObserver(\"resize\", (entries) => this.resizeCanvas(entries));\n    this.shiftKeyChannelAdjustment = 0;\n    this.upOrDownArrowKeyTracker = null;\n    this._valueWasSet = false;\n    this.messages = useT9n({ blocking: true });\n    this.captureColorFieldColor = (x, y, skipEqual = true) => {\n      const { width, height } = this.dynamicDimensions.colorField;\n      const saturation = Math.round(HSV_LIMITS.s / width * x);\n      const value = Math.round(HSV_LIMITS.v / height * (height - y));\n      this.internalColorSet(this.baseColorFieldColor.hsv().saturationv(saturation).value(value), skipEqual);\n    };\n    this.drawColorControls = throttle((type = \"all\") => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n      if (this.alphaChannel && (type === \"all\" || type === \"opacity-slider\") && this.opacitySliderRenderingContext) {\n        this.drawOpacitySlider();\n      }\n    }, throttleFor60FpsInMs);\n    this.globalPointerMoveHandler = (event) => {\n      const { activeCanvasInfo, el } = this;\n      if (!el.isConnected || !activeCanvasInfo) {\n        return;\n      }\n      const { context, bounds } = activeCanvasInfo;\n      let samplingX;\n      let samplingY;\n      const { clientX, clientY } = event;\n      if (context.canvas.matches(\":hover\")) {\n        samplingX = clientX - bounds.x;\n        samplingY = clientY - bounds.y;\n      } else {\n        if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n          samplingX = clientX - bounds.x;\n        } else if (clientX < bounds.x) {\n          samplingX = 0;\n        } else {\n          samplingX = bounds.width;\n        }\n        if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n          samplingY = clientY - bounds.y;\n        } else if (clientY < bounds.y) {\n          samplingY = 0;\n        } else {\n          samplingY = bounds.height;\n        }\n      }\n      if (context === this.colorFieldRenderingContext) {\n        this.captureColorFieldColor(samplingX, samplingY, false);\n      } else if (context === this.hueSliderRenderingContext) {\n        this.captureHueSliderColor(samplingX);\n      } else if (context === this.opacitySliderRenderingContext) {\n        this.captureOpacitySliderValue(samplingX);\n      }\n    };\n    this.globalPointerUpHandler = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      const previouslyDragging = this.activeCanvasInfo;\n      this.activeCanvasInfo = null;\n      this.drawColorControls();\n      if (previouslyDragging) {\n        this.calciteColorPickerChange.emit();\n      }\n    };\n    this.resizeCanvas = throttle((entries) => {\n      if (!this.hasUpdated) {\n        return;\n      }\n      const [first] = entries;\n      const availableWidth = Math.floor(first.contentBoxSize[0].inlineSize);\n      if (this.dynamicDimensions.colorField.width === availableWidth) {\n        return;\n      }\n      this.updateDynamicDimensions(availableWidth);\n      this.updateCanvasSize();\n      this.drawColorControls();\n    }, throttleFor60FpsInMs);\n    this.updateDynamicDimensions = (width) => {\n      const sliderDims = {\n        width: getSliderWidth(width, this.staticDimensions, this.alphaChannel),\n        height: this.staticDimensions.slider.height\n      };\n      this.dynamicDimensions = {\n        colorField: getColorFieldDimensions(width),\n        slider: sliderDims\n      };\n    };\n    this.channelMode = \"rgb\";\n    this.channels = this.toChannels(DEFAULT_COLOR);\n    this.staticDimensions = STATIC_DIMENSIONS.m;\n    this.savedColors = [];\n    this.allowEmpty = false;\n    this.alphaChannel = false;\n    this.channelsDisabled = false;\n    this.clearable = false;\n    this.disabled = false;\n    this.format = \"auto\";\n    this.hexDisabled = false;\n    this.savedDisabled = false;\n    this.scale = \"m\";\n    this.calciteColorPickerChange = createEvent({ cancelable: false });\n    this.calciteColorPickerInput = createEvent({ cancelable: false });\n    this.listen(\"keydown\", this.handleChannelKeyUpOrDown, { capture: true });\n    this.listen(\"keyup\", this.handleChannelKeyUpOrDown, { capture: true });\n  }\n  static {\n    this.properties = { channelMode: [16, {}, { state: true }], channels: [16, {}, { state: true }], colorFieldScopeLeft: [16, {}, { state: true }], colorFieldScopeTop: [16, {}, { state: true }], staticDimensions: [16, {}, { state: true }], hueScopeLeft: [16, {}, { state: true }], opacityScopeLeft: [16, {}, { state: true }], savedColors: [16, {}, { state: true }], scopeOrientation: [16, {}, { state: true }], allowEmpty: [7, {}, { reflect: true, type: Boolean }], alphaChannel: [5, {}, { type: Boolean }], channelsDisabled: [5, {}, { type: Boolean }], clearable: [7, {}, { reflect: true, type: Boolean }], color: [0, {}, { attribute: false }], disabled: [7, {}, { reflect: true, type: Boolean }], format: [3, {}, { reflect: true }], hexDisabled: [5, {}, { type: Boolean }], messageOverrides: [0, {}, { attribute: false }], numberingSystem: [3, {}, { reflect: true }], savedDisabled: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], storageId: [3, {}, { reflect: true }], value: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  get color() {\n    return this._color;\n  }\n  set color(color) {\n    const oldColor = this._color;\n    this._color = color;\n    this.handleColorChange(color, oldColor);\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    const oldValue = this._value;\n    this._value = value;\n    this.handleValueChange(value, oldValue);\n    this._valueWasSet = true;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.observeResize();\n  }\n  async load() {\n    if (!this._valueWasSet) {\n      this._value ??= normalizeHex(hexify(DEFAULT_COLOR, this.alphaChannel));\n    }\n    this.handleAllowEmptyOrClearableChange();\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible = willSetNoColor || format === \"auto\" && parsedMode || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n    this.updateStaticDimensions(this.scale);\n    this.updateDynamicDimensions(STATIC_DIMENSIONS[this.scale].minWidth);\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"allowEmpty\") && (this.hasUpdated || this.allowEmpty !== false) || changes.has(\"clearable\") && (this.hasUpdated || this.clearable !== false)) {\n      this.handleAllowEmptyOrClearableChange();\n    }\n    if (changes.has(\"alphaChannel\") && (this.hasUpdated || this.alphaChannel !== false)) {\n      this.handleAlphaChannelChange(this.alphaChannel);\n    }\n    if (this.hasUpdated && (changes.has(\"alphaChannel\") && this.alphaChannel !== false || changes.has(\"staticDimensions\") && this.staticDimensions !== STATIC_DIMENSIONS.m)) {\n      this.handleAlphaChannelDimensionsChange();\n    }\n    if (changes.has(\"alphaChannel\") && (this.hasUpdated || this.alphaChannel !== false) || changes.has(\"format\") && (this.hasUpdated || this.format !== \"auto\")) {\n      this.handleFormatOrAlphaChannelChange();\n    }\n    if (changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.handleScaleChange(this.scale);\n    }\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  loaded() {\n    this.handleAlphaChannelDimensionsChange();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    this.resizeObserver?.disconnect();\n  }\n  get baseColorFieldColor() {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n  get effectiveSliderWidth() {\n    return this.dynamicDimensions.slider.width;\n  }\n  observeResize() {\n    this.resizeObserver?.observe(this.el);\n  }\n  handleAllowEmptyOrClearableChange() {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n  handleAlphaChannelChange(alphaChannel) {\n    const { format } = this;\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(`ignoring alphaChannel as the current format (${format}) does not support alpha`);\n      this.alphaChannel = false;\n    }\n  }\n  handleAlphaChannelDimensionsChange() {\n    this.drawColorControls();\n  }\n  handleColorChange(color, oldColor) {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n  handleFormatOrAlphaChannelChange() {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n  handleScaleChange(scale = \"m\") {\n    this.updateStaticDimensions(scale);\n    this.updateCanvasSize();\n    this.drawColorControls();\n  }\n  handleValueChange(value, oldValue) {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n    if (checkMode) {\n      const nextMode = parseMode(value);\n      if (!nextMode || format !== \"auto\" && nextMode !== format) {\n        this.showIncompatibleColorWarning(value, format);\n        this._value = oldValue;\n        return;\n      }\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n    const dragging = this.activeCanvasInfo;\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n    const color = isClearable && !value ? null : Color(value != null && typeof value === \"object\" && alphaCompatible(this.mode) ? normalizeColor(value) : value);\n    const colorChanged = !colorEqual(color, this.color);\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(color, this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")) || this.internalColorUpdateContext === \"internal\", \"internal\");\n    }\n  }\n  handleTabActivate(event) {\n    this.channelMode = event.currentTarget.getAttribute(\"data-color-mode\");\n    this.updateChannelsFromColor(this.color);\n  }\n  handleColorFieldScopeKeyDown(event) {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 }\n    };\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0, this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0, false);\n    }\n  }\n  handleHueScopeKeyDown(event) {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1\n    };\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  }\n  handleHexInputChange(event) {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target;\n    const hex = input.value;\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  }\n  handleSavedColorSelect(event) {\n    const swatch = event.currentTarget;\n    this.internalColorSet(Color(swatch.color));\n  }\n  handleChannelInput(event) {\n    const input = event.currentTarget;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n    const limit = isAlphaChannel ? OPACITY_LIMITS.max : this.channelMode === \"rgb\" ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]] : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n    let inputValue;\n    if (!input.value) {\n      inputValue = \"\";\n      this.isActiveChannelInputEmpty = true;\n      this.upOrDownArrowKeyTracker = null;\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n      inputValue = clamped.toString();\n    }\n    input.value = inputValue;\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      this.handleChannelChange(event);\n    } else if (inputValue !== \"\") {\n      this.handleChannelChange(event);\n    }\n  }\n  handleChannelBlur(event) {\n    const input = event.currentTarget;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels];\n    const restoreValueDueToEmptyInput = !input.value && !this.isClearable;\n    if (restoreValueDueToEmptyInput) {\n      input.value = channels[channelIndex]?.toString();\n    }\n  }\n  handleChannelFocus(event) {\n    const input = event.currentTarget;\n    input.selectText();\n  }\n  handleChannelKeyUpOrDown(event) {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n    if (key !== \"ArrowUp\" && key !== \"ArrowDown\" || !event.composedPath().some((node) => node.classList?.contains(CSS.channel))) {\n      return;\n    }\n    const { shiftKey } = event;\n    event.preventDefault();\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n    const complementaryBump = 9;\n    this.shiftKeyChannelAdjustment = key === \"ArrowUp\" && shiftKey ? complementaryBump : key === \"ArrowDown\" && shiftKey ? -9 : 0;\n    if (key === \"ArrowUp\") {\n      this.upOrDownArrowKeyTracker = \"up\";\n    }\n    if (key === \"ArrowDown\") {\n      this.upOrDownArrowKeyTracker = \"down\";\n    }\n  }\n  getChannelInputLimit(channelIndex) {\n    return this.channelMode === \"rgb\" ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]] : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n  }\n  handleChannelChange(event) {\n    const input = event.currentTarget;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels];\n    const shouldClearChannels = this.isClearable && !input.value;\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n    const isAlphaChannel = channelIndex === 3;\n    if (this.isActiveChannelInputEmpty && this.upOrDownArrowKeyTracker) {\n      input.value = this.upOrDownArrowKeyTracker === \"up\" ? (channels[channelIndex] + 1 <= this.getChannelInputLimit(channelIndex) ? channels[channelIndex] + 1 : this.getChannelInputLimit(channelIndex)).toString() : (channels[channelIndex] - 1 >= 0 ? channels[channelIndex] - 1 : 0).toString();\n      this.isActiveChannelInputEmpty = false;\n      this.upOrDownArrowKeyTracker = null;\n    }\n    const value = input.value ? Number(input.value) : channels[channelIndex];\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  }\n  handleSavedColorKeyDown(event) {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  }\n  handleColorFieldPointerDown(event) {\n    this.handleCanvasControlPointerDown(event, this.colorFieldRenderingContext, this.captureColorFieldColor, this.colorFieldScopeNode);\n  }\n  focusScope(focusEl) {\n    requestAnimationFrame(() => {\n      focusEl.focus();\n    });\n  }\n  handleHueSliderPointerDown(event) {\n    this.handleCanvasControlPointerDown(event, this.hueSliderRenderingContext, this.captureHueSliderColor, this.hueScopeNode);\n  }\n  handleOpacitySliderPointerDown(event) {\n    this.handleCanvasControlPointerDown(event, this.opacitySliderRenderingContext, this.captureOpacitySliderValue, this.opacityScopeNode);\n  }\n  handleCanvasControlPointerDown(event, renderingContext, captureValue, scopeNode) {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, {\n      once: true\n    });\n    this.activeCanvasInfo = {\n      context: renderingContext,\n      bounds: renderingContext.canvas.getBoundingClientRect()\n    };\n    captureValue.call(this, event.offsetX, event.offsetY);\n    this.focusScope(scopeNode);\n  }\n  storeColorFieldScope(node) {\n    this.colorFieldScopeNode = node;\n  }\n  storeHueScope(node) {\n    this.hueScopeNode = node;\n  }\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n  showIncompatibleColorWarning(value, format) {\n    console.warn(`ignoring color value (${value}) as it is not compatible with the current format (${format})`);\n  }\n  setMode(format, warn = true) {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n  ensureCompatibleMode(mode, warn) {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n      if (warn) {\n        console.warn(`setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`);\n      }\n      return alphaMode;\n    }\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n      if (warn) {\n        console.warn(`setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`);\n      }\n      return nonAlphaMode;\n    }\n    return mode;\n  }\n  captureHueSliderColor(x) {\n    const hue = HUE_LIMIT_CONSTRAINED / this.effectiveSliderWidth * x;\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n  captureOpacitySliderValue(x) {\n    const alpha = opacityToAlpha(OPACITY_LIMITS.max / this.effectiveSliderWidth * x);\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n  internalColorSet(color, skipEqual = true, context = \"user-interaction\") {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n  toValue(color, format = this.mode) {\n    if (!color) {\n      return null;\n    }\n    const hexMode = \"hex\";\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n      const needToInjectAlpha = (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n      return value;\n    }\n    const colorObject = (\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object()\n    );\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n    return colorObject;\n  }\n  getSliderCapSpacing() {\n    const { staticDimensions: { slider: { height }, thumb: { radius } } } = this;\n    return radius * 2 - height;\n  }\n  updateStaticDimensions(scale = \"m\") {\n    this.staticDimensions = STATIC_DIMENSIONS[scale];\n  }\n  deleteColor() {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n    if (!inStorage) {\n      return;\n    }\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n    this.savedColors = savedColors;\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  }\n  saveColor() {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n    if (alreadySaved) {\n      return;\n    }\n    const savedColors = [...this.savedColors, colorToSave];\n    this.savedColors = savedColors;\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  }\n  drawColorField() {\n    const context = this.colorFieldRenderingContext;\n    const { width, height } = this.dynamicDimensions.colorField;\n    context.fillStyle = this.baseColorFieldColor.hsv().saturationv(100).value(100).alpha(1).string();\n    context.fillRect(0, 0, width, height);\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n    this.drawActiveColorFieldColor();\n  }\n  setCanvasContextSize(canvas, { height, width }) {\n    if (!canvas) {\n      return;\n    }\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n  initColorField(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  }\n  initHueSlider(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  }\n  initOpacitySlider(canvas) {\n    if (!canvas) {\n      return;\n    }\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  }\n  updateCanvasSize(context = \"all\") {\n    const { dynamicDimensions, staticDimensions } = this;\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dynamicDimensions.colorField);\n    }\n    const adjustedSliderDimensions = {\n      width: this.effectiveSliderWidth,\n      height: staticDimensions.slider.height + (staticDimensions.thumb.radius - dynamicDimensions.slider.height / 2) * 2\n    };\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(this.opacitySliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n  }\n  drawActiveColorFieldColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv();\n    const { staticDimensions: { thumb: { radius } } } = this;\n    const { width, height } = this.dynamicDimensions.colorField;\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n  drawThumb(context, radius, x, y, color, applyAlpha) {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n    context.globalCompositeOperation = \"source-atop\";\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n  }\n  drawActiveHueSliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color.hsv().saturationv(100).value(100);\n    const { staticDimensions: { thumb: { radius } } } = this;\n    const width = this.effectiveSliderWidth;\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n  drawHueSlider() {\n    const context = this.hueSliderRenderingContext;\n    const { staticDimensions: { slider: { height }, thumb: { radius: thumbRadius } } } = this;\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\"\n    ];\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n    this.drawSliderPath(context, height, width, x, y);\n    context.fillStyle = gradient;\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n    this.drawActiveHueSliderColor();\n  }\n  drawOpacitySlider() {\n    const context = this.opacitySliderRenderingContext;\n    const { baseColorFieldColor: previousColor, staticDimensions: { slider: { height }, thumb: { radius: thumbRadius } } } = this;\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n    this.drawSliderPath(context, height, width, x, y);\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n    context.fillStyle = gradient;\n    context.fill();\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n    this.drawActiveOpacitySliderColor();\n  }\n  drawSliderPath(context, height, width, x, y) {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n  getCheckeredBackgroundPattern() {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n    this.checkerPattern = pattern;\n    return pattern;\n  }\n  drawActiveOpacitySliderColor() {\n    const { color } = this;\n    if (!color) {\n      return;\n    }\n    const hsvColor = color;\n    const { staticDimensions: { thumb: { radius } } } = this;\n    const width = this.effectiveSliderWidth;\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n  getSliderBoundX(x, width, radius) {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n    return closeToEdge === 0 ? x : closeToEdge === -1 ? remap(x, 0, width, radius, radius * 2) : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n  storeOpacityScope(node) {\n    this.opacityScopeNode = node;\n  }\n  handleOpacityScopeKeyDown(event) {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01\n    };\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  }\n  updateColorFromChannels(channels) {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n  updateChannelsFromColor(color) {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n  toChannels(color) {\n    const { channelMode } = this;\n    const channels = color[channelMode]().array().map((value, index) => {\n      const isAlpha = index === 3;\n      return isAlpha ? value : Math.floor(value);\n    });\n    if (channels.length === 3) {\n      channels.push(1);\n    }\n    return channels;\n  }\n  getAdjustedScopePosition(left, top) {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n  render() {\n    const { channelsDisabled, color, colorFieldScopeLeft, colorFieldScopeTop, staticDimensions: { thumb: { radius: thumbRadius } }, hexDisabled, hueScopeLeft, messages, alphaChannel, opacityScopeLeft, savedColors, savedDisabled, scale, scopeOrientation } = this;\n    const sliderWidth = this.effectiveSliderWidth;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? sliderWidth * DEFAULT_COLOR.hue() / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft = opacityScopeLeft ?? sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha()) / OPACITY_LIMITS.max;\n    const noColor = color === void 0;\n    const vertical = scopeOrientation === \"vertical\";\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(colorFieldScopeLeft, colorFieldScopeTop);\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(hueLeft, hueTop);\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(opacityLeft, opacityTop);\n    return InteractiveContainer({ disabled: this.disabled, children: html`<div class=${safeClassMap(CSS.container)}><div class=${safeClassMap(CSS.controlAndScope)}><canvas class=${safeClassMap(CSS.colorField)} @pointerdown=${this.handleColorFieldPointerDown} ${ref(this.initColorField)}></canvas><div .ariaLabel=${vertical ? messages.value : messages.saturation} .ariaValueMax=${vertical ? HSV_LIMITS.v : HSV_LIMITS.s} aria-valuemin=0 .ariaValueNow=${(vertical ? color?.saturationv() : color?.value()) || \"0\"} class=${safeClassMap({ [CSS.scope]: true, [CSS.colorFieldScope]: true })} @keydown=${this.handleColorFieldScopeKeyDown} role=slider style=${safeStyleMap({\n      top: `${adjustedColorFieldScopeTop || 0}px`,\n      left: `${adjustedColorFieldScopeLeft || 0}px`\n    })} tabindex=0 ${ref(this.storeColorFieldScope)}></div></div><div class=${safeClassMap(CSS.previewAndSliders)}><calcite-color-picker-swatch class=${safeClassMap(CSS.preview)} .color=${selectedColorInHex} .scale=${this.alphaChannel ? \"l\" : this.scale}></calcite-color-picker-swatch><div class=${safeClassMap(CSS.sliders)}><div class=${safeClassMap(CSS.controlAndScope)}><canvas class=${safeClassMap({ [CSS.slider]: true, [CSS.hueSlider]: true })} @pointerdown=${this.handleHueSliderPointerDown} ${ref(this.initHueSlider)}></canvas><div .ariaLabel=${messages.hue} .ariaValueMax=${HSV_LIMITS.h} aria-valuemin=0 .ariaValueNow=${color?.round().hue() || DEFAULT_COLOR.round().hue()} class=${safeClassMap({ [CSS.scope]: true, [CSS.hueScope]: true })} @keydown=${this.handleHueScopeKeyDown} role=slider style=${safeStyleMap({\n      top: `${adjustedHueScopeTop}px`,\n      left: `${adjustedHueScopeLeft}px`\n    })} tabindex=0 ${ref(this.storeHueScope)}></div></div>${alphaChannel ? html`<div class=${safeClassMap(CSS.controlAndScope)}><canvas class=${safeClassMap({ [CSS.slider]: true, [CSS.opacitySlider]: true })} @pointerdown=${this.handleOpacitySliderPointerDown} ${ref(this.initOpacitySlider)}></canvas><div .ariaLabel=${messages.opacity} .ariaValueMax=${OPACITY_LIMITS.max} .ariaValueMin=${OPACITY_LIMITS.min} .ariaValueNow=${(color || DEFAULT_COLOR).round().alpha()} class=${safeClassMap({ [CSS.scope]: true, [CSS.opacityScope]: true })} @keydown=${this.handleOpacityScopeKeyDown} role=slider style=${safeStyleMap({\n      top: `${adjustedOpacityScopeTop}px`,\n      left: `${adjustedOpacityScopeLeft}px`\n    })} tabindex=0 ${ref(this.storeOpacityScope)}></div></div>` : null}</div></div>${hexDisabled && channelsDisabled ? null : html`<div class=${safeClassMap({\n      [CSS.controlSection]: true,\n      [CSS.section]: true\n    })}><div class=${safeClassMap(CSS.hexAndChannelsGroup)}>${hexDisabled ? null : html`<div class=${safeClassMap(CSS.hexOptions)}><calcite-color-picker-hex-input .allowEmpty=${this.isClearable} .alphaChannel=${alphaChannel} class=${safeClassMap(CSS.control)} .messages=${messages} .numberingSystem=${this.numberingSystem} @calciteColorPickerHexInputChange=${this.handleHexInputChange} .scale=${scale} .value=${selectedColorInHex}></calcite-color-picker-hex-input></div>`}${channelsDisabled ? null : html`<calcite-tabs class=${safeClassMap({\n      [CSS.colorModeContainer]: true,\n      [CSS.splitSection]: true\n    })} .scale=${scale === \"l\" ? \"m\" : \"s\"}><calcite-tab-nav slot=title-group>${this.renderChannelsTabTitle(\"rgb\")}${this.renderChannelsTabTitle(\"hsv\")}</calcite-tab-nav>${this.renderChannelsTab(\"rgb\")}${this.renderChannelsTab(\"hsv\")}</calcite-tabs>`}</div></div>`}${savedDisabled ? null : html`<div class=${safeClassMap({ [CSS.savedColorsSection]: true, [CSS.section]: true })}><div class=${safeClassMap(CSS.header)}><label>${messages.saved}</label><div class=${safeClassMap(CSS.savedColorsButtons)}><calcite-button appearance=transparent class=${safeClassMap(CSS.deleteColor)} .disabled=${noColor} icon-start=minus kind=neutral .label=${messages.deleteColor} @click=${this.deleteColor} .scale=${scale} type=button></calcite-button><calcite-button appearance=transparent class=${safeClassMap(CSS.saveColor)} .disabled=${noColor} icon-start=plus kind=neutral .label=${messages.saveColor} @click=${this.saveColor} .scale=${scale} type=button></calcite-button></div></div>${savedColors.length > 0 ? html`<div class=${safeClassMap(CSS.savedColors)}>${repeat(savedColors, (color2) => color2, (color2) => html`<calcite-color-picker-swatch class=${safeClassMap(CSS.savedColor)} .color=${color2} @click=${this.handleSavedColorSelect} @keydown=${this.handleSavedColorKeyDown} .scale=${scale} tabindex=0></calcite-color-picker-swatch>`)}</div>` : null}</div>`}</div>` });\n  }\n  renderChannelsTabTitle(channelMode) {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n    return keyed(channelMode, html`<calcite-tab-title class=${safeClassMap(CSS.colorMode)} data-color-mode=${channelMode ?? nothing} @calciteTabsActivate=${this.handleTabActivate} .selected=${selected}>${label}</calcite-tab-title>`);\n  }\n  renderChannelsTab(channelMode) {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb ? [messages.red, messages.green, messages.blue] : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n    return keyed(channelMode, html`<calcite-tab class=${safeClassMap(CSS.control)} .selected=${selected}><div class=${safeClassMap(CSS.channels)} dir=ltr>${channelsToRender.map((channelValue, index) => {\n      const isAlphaChannel = index === 3;\n      if (isAlphaChannel) {\n        channelValue = isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n      }\n      return this.renderChannel(channelValue, index, channelAriaLabels[index], direction, isAlphaChannel ? \"%\" : \"\");\n    })}</div></calcite-tab>`);\n  }\n  renderChannel(value, index, ariaLabel, direction, suffix) {\n    return keyed(index, html`<calcite-input-number class=${safeClassMap(CSS.channel)} data-channel-index=${index ?? nothing} dir=${direction ?? nothing} .label=${ariaLabel} lang=${this.messages._lang ?? nothing} number-button-type=none .numberingSystem=${this.numberingSystem} @keydown=${this.handleKeyDown} @calciteInputNumberChange=${this.handleChannelChange} @calciteInputNumberInput=${this.handleChannelInput} @calciteInternalInputNumberBlur=${this.handleChannelBlur} @calciteInternalInputNumberFocus=${this.handleChannelFocus} .scale=${this.scale === \"l\" ? \"m\" : \"s\"} style=${safeStyleMap({\n      marginLeft: index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\"\n    })} .suffixText=${suffix} .value=${value?.toString()}></calcite-input-number>`);\n  }\n}\ncustomElement(\"calcite-color-picker\", ColorPicker);\nexport {\n  ColorPicker\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { html } from \"lit\";\nimport { LitElement, safeClassMap } from \"@arcgis/lumina\";\nimport { s as slotChangeGetAssignedElements, e as getSlotAssignedElements } from \"../../chunks/dom.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  section: \"section\"\n};\nconst SLOTS = {\n  titleGroup: \"title-group\"\n};\nconst styles = css`:host{display:flex;flex-direction:column}:host([bordered]){box-shadow:inset 0 1px 0 var(--calcite-tab-border-color, var(--calcite-color-border-1));background-color:var(--calcite-tab-background-color, var(--calcite-color-foreground-1))}:host([bordered]) section{border-color:var(--calcite-tab-border-color, var(--calcite-color-border-1));border-style:solid}section{display:flex;flex-grow:1;overflow:hidden;border-width:1px;border-block-start-style:solid;border-block-start-color:var(--calcite-tab-border-color, var(--calcite-color-border-1))}:host([bordered][position=bottom]){box-shadow:inset 0 1px 0 var(--calcite-tab-border-color, var(--calcite-color-border-1)),inset 0 -1px 0 var(--calcite-tab-border-color, var(--calcite-color-border-1))}:host([bordered]:not([position=bottom])) ::slotted(calcite-tab-nav){margin-block-end:-1px}:host([position=bottom]){flex-direction:column-reverse}:host([position=bottom]) section{flex-direction:column-reverse;border-block-start-width:0px;border-block-end-width:1px}:host([bordered][scale=s]) section{padding:.75rem}:host([bordered][scale=m]) section{padding:.5rem}:host([bordered][scale=l]) section{padding:1rem}:host([position=bottom]:not([bordered])) section{border-block-end-style:solid;border-block-end-color:var(--calcite-tab-border-color, var(--calcite-color-border-1))}@media (forced-colors: active){:host([bordered]) section{border-block-start-width:0px;border-block-end-width:1px}:host([position=bottom][bordered]) section{border-block-start-width:1px;border-block-end-width:0px}}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Tabs extends LitElement {\n  constructor() {\n    super();\n    this.tabs = [];\n    this.titles = [];\n    this.bordered = false;\n    this.layout = \"inline\";\n    this.position = \"top\";\n    this.scale = \"m\";\n    this.listen(\"calciteInternalTabNavSlotChange\", this.calciteInternalTabNavSlotChangeHandler);\n  }\n  static {\n    this.properties = { tabs: [16, {}, { state: true }], titles: [16, {}, { state: true }], bordered: [5, {}, { type: Boolean }], layout: [3, {}, { reflect: true }], position: [3, {}, { reflect: true }], scale: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateItems();\n  }\n  load() {\n    this.updateItems();\n  }\n  willUpdate(changes) {\n    if (changes.has(\"position\") && (this.hasUpdated || this.position !== \"top\") || changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.updateItems();\n    }\n    if ((changes.has(\"titles\") || changes.has(\"tabs\")) && this.hasUpdated && this.titles?.length > 0 && this.tabs?.length > 0) {\n      this.updateAriaSettings();\n      this.updateItems();\n    }\n  }\n  calciteInternalTabNavSlotChangeHandler(event) {\n    event.stopPropagation();\n    if (event.detail.length !== this.titles.length) {\n      this.titles = event.detail;\n    }\n  }\n  defaultSlotChangeHandler(event) {\n    this.tabs = slotChangeGetAssignedElements(event, \"calcite-tab\");\n  }\n  async updateAriaSettings() {\n    await this.componentOnReady();\n    let tabIds;\n    let titleIds;\n    const tabs = getSlotAssignedElements(this.slotEl, \"calcite-tab\");\n    if (tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      tabIds = tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      const tabDomIndexes = await Promise.all(tabs.map((el) => el.getTabIndex()));\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = tabs[registryIndex].id;\n        return ids;\n      }, []);\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n    tabs.forEach((el) => el._updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el._updateAriaInfo(tabIds, titleIds));\n  }\n  updateItems() {\n    const { position, scale } = this;\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach((title) => {\n      title.position = position;\n      title.scale = scale;\n    });\n  }\n  setDefaultSlotRef(el) {\n    this.slotEl = el;\n  }\n  render() {\n    return html`<slot name=${SLOTS.titleGroup}></slot><section class=${safeClassMap(CSS.section)}><slot @slotchange=${this.defaultSlotChangeHandler} ${ref(this.setDefaultSlotRef)}></slot></section>`;\n  }\n}\ncustomElement(\"calcite-tabs\", Tabs);\nexport {\n  Tabs\n};\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["CSS","styles","css","_templateObject","_taggedTemplateLiteral","Tab","LitElement","constructor","super","this","guid","concat","scale","selected","listenOn","document","body","internalTabChangeHandler","getTabIndex","Array","prototype","indexOf","call","nodeListToArray","el","parentElement","children","filter","matches","_updateAriaInfo","tabIds","arguments","length","undefined","titleIds","labeledBy","id","connectedCallback","parentTabsEl","closest","disconnectedCallback","_document$body","dispatchEvent","CustomEvent","detail","event","composedPath","find","tagName","tab","then","index","stopPropagation","render","setAttribute","html","_templateObject2","safeClassMap","_Tab","properties","state","reflect","type","Boolean","customElement","u","generateMap","e","s","t","r","Map","l","set","c","CHILD","Error","dt","o","i","values","keys","update","_ref","_this$ut","d","p","a","isArray","ut","h","v","m","y","x","j","k","w","has","get","n","f","DEFAULT_COLOR","Color","ColorPickerHexInput","internalColor","alphaChannel","allowEmpty","hexLabel","value","normalizeHex","hexify","calciteColorPickerHexInputChange","createEvent","cancelable","setFocus","componentFocusable","focusElement","hexInputNode","previousNonNullValue","normalized","isValidHex","internalSetValue","willUpdate","changes","hasUpdated","onHexInputBlur","node","inputValue","hex","willClearValue","isLonghand","isLonghandHex","isShorthandHex","onHexInputChange","formatHexForInternalInput","rgbToHex","object","onOpacityInputBlur","opacityInputNode","formatOpacityForInternalInput","onOpacityInputInput","onOpacityInputChange","alphaHex","hexa","slice","_this$internalColor","alpha","opacityToAlpha","Number","onInputFocus","selectText","onHexInputInput","hexInputValue","oldValue","onInputKeyDown","altKey","ctrlKey","metaKey","shiftKey","key","includes","preventDefault","isNudgeKey","direction","bump","nudgeRGBChannels","withModifiers","singleChar","validHexChar","hexChar","test","onHexInputPaste","clipboardData","getData","emit","currentColor","nextColor","normalizedLonghand","changed","storeHexInputRef","storeOpacityInputRef","replace","color","alphaToOpacity","amount","context","nudgedChannels","channels","array","rgbChannels","map","channel","nudgedAlpha","messages","opacityInputValue","inputScale","ref","keyed","_templateObject3","opacity","OPACITY_LIMITS","max","min","numberingSystem","_ColorPickerHexInput","attribute","ColorPicker","_this","_color","internalColorUpdateContext","isActiveChannelInputEmpty","mode","CSSColorMode","HEX","resizeObserver","createObserver","entries","resizeCanvas","shiftKeyChannelAdjustment","upOrDownArrowKeyTracker","_valueWasSet","useT9n","blocking","captureColorFieldColor","skipEqual","width","height","dynamicDimensions","colorField","saturation","Math","round","HSV_LIMITS","internalColorSet","baseColorFieldColor","hsv","saturationv","drawColorControls","throttle","colorFieldRenderingContext","drawColorField","hueSliderRenderingContext","drawHueSlider","opacitySliderRenderingContext","drawOpacitySlider","globalPointerMoveHandler","activeCanvasInfo","isConnected","bounds","samplingX","samplingY","clientX","clientY","canvas","captureHueSliderColor","captureOpacitySliderValue","globalPointerUpHandler","isPrimaryPointerButton","previouslyDragging","calciteColorPickerChange","first","availableWidth","floor","contentBoxSize","inlineSize","updateDynamicDimensions","updateCanvasSize","sliderDims","getSliderWidth","staticDimensions","slider","getColorFieldDimensions","channelMode","toChannels","STATIC_DIMENSIONS","savedColors","channelsDisabled","clearable","disabled","format","hexDisabled","savedDisabled","calciteColorPickerInput","listen","handleChannelKeyUpOrDown","capture","oldColor","handleColorChange","_value","handleValueChange","focusFirstTabbable","observeResize","load","_this$_value","handleAllowEmptyOrClearableChange","isClearable","willSetNoColor","parsedMode","parseMode","valueIsCompatible","initialColor","showIncompatibleColorWarning","setMode","updateStaticDimensions","minWidth","storageKey","DEFAULT_STORAGE_KEY_PREFIX","storageId","localStorage","getItem","JSON","parse","handleAlphaChannelChange","handleAlphaChannelDimensionsChange","handleFormatOrAlphaChannelChange","handleScaleChange","updated","updateHostInteraction","loaded","_this$resizeObserver","window","removeEventListener","disconnect","previousColor","effectiveSliderWidth","_this$resizeObserver2","observe","alphaCompatible","console","warn","updateChannelsFromColor","modeChanged","nextMode","dragging","normalizeColor","colorChanged","colorEqual","endsWith","handleTabActivate","currentTarget","getAttribute","handleColorFieldScopeKeyDown","arrowKeyToXYOffset","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","scopeOrientation","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","arrowKeyToXOffset","delta","hue","handleHexInputChange","target","handleSavedColorSelect","swatch","handleChannelInput","input","channelIndex","limit","RGB_LIMITS","Object","adjustedValue","clamp","toString","handleChannelChange","handleChannelBlur","_channels$channelInde","handleChannelFocus","some","_node$classList","classList","contains","getChannelInputLimit","isAlphaChannel","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","handleCanvasControlPointerDown","colorFieldScopeNode","focusScope","focusEl","requestAnimationFrame","focus","handleHueSliderPointerDown","hueScopeNode","handleOpacitySliderPointerDown","opacityScopeNode","renderingContext","captureValue","scopeNode","addEventListener","once","getBoundingClientRect","offsetX","offsetY","storeColorFieldScope","storeHueScope","handleKeyDown","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","HUE_LIMIT_CONSTRAINED","toValue","hasAlpha","HEXA","string","model","colorObject","normalizeAlpha","getSliderCapSpacing","thumb","radius","deleteColor","colorToDelete","setItem","stringify","saveColor","colorToSave","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","devicePixelRatio","style","getContext","initColorField","initHueSlider","initOpacitySlider","_this$colorFieldRende","adjustedSliderDimensions","_this$hueSliderRender","_this$opacitySliderRe","hsvColor","drawThumb","applyAlpha","endAngle","PI","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","rgb","drawActiveHueSliderColor","sliderBoundX","getSliderBoundX","hueScopeLeft","thumbRadius","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","drawSliderPath","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","createElement","patternContext","opacityScopeLeft","closeToEdge","closeToRangeEdge","remap","storeOpacityScope","handleOpacityScopeKeyDown","push","getAdjustedScopePosition","left","top","SCOPE_SIZE","sliderWidth","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","container","controlAndScope","scope","colorFieldScope","safeStyleMap","previewAndSliders","preview","sliders","hueSlider","hueScope","opacitySlider","opacityScope","_templateObject4","controlSection","section","hexAndChannelsGroup","_templateObject5","hexOptions","control","_templateObject6","colorModeContainer","splitSection","renderChannelsTabTitle","renderChannelsTab","_templateObject7","savedColorsSection","header","saved","savedColorsButtons","_templateObject8","repeat","color2","_templateObject9","savedColor","activeChannelMode","label","_templateObject0","colorMode","nothing","channelAriaLabels","red","green","blue","getElementDir","channelsToRender","_templateObject1","channelValue","renderChannel","ariaLabel","suffix","_this$messages$_lang","_templateObject10","_lang","marginLeft","_ColorPicker","messageOverrides","SLOTS","Tabs","tabs","titles","bordered","layout","position","calciteInternalTabNavSlotChangeHandler","updateItems","_this$titles","_this$tabs","updateAriaSettings","defaultSlotChangeHandler","slotChangeGetAssignedElements","componentOnReady","getSlotAssignedElements","slotEl","sort","b","localeCompare","tabDomIndexes","Promise","all","titleDomIndexes","reduce","ids","indexInDOM","registryIndex","nav","querySelector","from","querySelectorAll","title","setDefaultSlotRef","_Tabs","func","wait","options","leading","trailing","TypeError","isObject","debounce"],"sourceRoot":""}